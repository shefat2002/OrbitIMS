@using OrbitIMS.Data
@model OrbitIMS.Data.Order

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-12">
        <form asp-action="Edit">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalAmount" class="control-label"></label>
                <input asp-for="TotalAmount" class="form-control" />
                <span asp-validation-for="TotalAmount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control" asp-items="@Html.GetEnumSelectList<OrderStatus>()"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CustomerId" class="control-label"></label>
                <select asp-for="CustomerId" class="form-control" asp-items="ViewBag.CustomerId"></select>
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
            <input type="hidden" asp-for="Id" />
            
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div>
                <button id="btnAdd" class="btn btn-dark">Add</button>
                @* @Model.OrderDetails.Count *@
                <table class="table table-bordered" id="tblOrderdetails">
                    <thead>
                        <tr>
                            <td>Serial</td>
                            <td>Id</td>
                            <td>Product</td>
                            <td>Quantity</td>
                            <td>Price</td>
                            <td>Total Price</td>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            for (int i = 0; i < Model.OrderDetails.Count; i++)
                            {
                                <tr>
                                    <td class="serial">  @Html.Raw(i + 1)
                                       
                                    </td>
                                    <td> <input type="number" asp-for="OrderDetails[@i].Id" name="OrderDetails[@i].Id" /></td>
                                    <td>
                                        <select id="ddlTemplate" asp-for="OrderDetails[@i].ProductId" name="OrderDetails[@i].ProductId" class="form-control" asp-items="ViewBag.ProductId"></select>
                                    </td>
                                    <td>
                                        <input type="number" asp-for="OrderDetails[@i].Quantity" name="OrderDetails[@i].Quantity" onchange="calculateSubtotal()" class="form-control" />
                                    </td>
                                    <td>
                                        <input type="number" name="OrderDetails[@i].UnitPrice" asp-for="OrderDetails[@i].UnitPrice" onchange="calculateSubtotal()" class="form-control" />
                                    </td>
                                    <td>
                                        <input type="number" asp-for="OrderDetails[@i].TotalPrice" name="OrderDetails[@i].TotalPrice" class="form-control" readonly />
                                    </td>
                                    <td>
                                        <button class="btn btn-danger mb-2" type="button" onchange="calculateSubtotal()">Remove</button>
                                    </td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>


        $(document).ready(function () {
            $(".btn-danger").click(function(){
                  $(this).closest("tr").remove();
                         var index = $("#tblOrderdetails tbody tr").length;
                                        showhidebtn(index)
                reindexRows();
            })
            // $(".btn-danger").hide();
            $("#btnAdd").click(function (e) {
                e.preventDefault();

                var index = $("#tblOrderdetails tbody tr").length;
                                showhidebtn(index)
                // get template options
                var options = $("#ddlTemplate").html();

                var newRow = `<tr>
                                 <td class="serial">${index + 1}

                                 
                                 </td>
                                 <td> <input type="number" asp-for="OrderDetails[${index}].Id" name="OrderDetails[${index}].Id" /></td>
                                 <td>
                                     <select name="OrderDetails[${index}].ProductId" class="form-control">
                                         ${options}
                                     </select>
                                 </td>
                                         <td><input type="number" name="OrderDetails[${index}].Quantity"  asp-for="OrderDetails[${index}].Quantity"  onchange="calculateSubtotal()"  class="form-control" /></td>
                                         <td><input type="number" name="OrderDetails[${index}].Price"  asp-for="OrderDetails[${index}].Price" onchange="calculateSubtotal()"  class="form-control" /></td>
                                         <td><input type="number" name="OrderDetails[${index}].TotalPrice" asp-for="OrderDetails[${index}].TotalPrice"    class="form-control" /></td>
                                         <td><button type="button" class="btn btn-danger btn-remove" type="button" onchange="calculateSubtotal()" >Remove</button></td>
                             </tr>`;
                            
                $("#tblOrderdetails tbody").append(newRow);
            });

            // Remove button
            

            // Reindex after remove
            function reindexRows() {
                $("#tblOrderdetails tbody tr").each(function (i, row) {
                            $(row).find("td.serial").text(i + 1);
                    $(row).find("select, input").each(function () {
                        var name = $(this).attr("name");
                        if (name) {
                            $(this).attr("name", name.replace(/\[\d+\]/, `[${i}]`));
                        }
                    });
                });
            }
            function showhidebtn(i){

                if(Number(i) ===1){
                            $(".btn-danger").hide();
                }
                else
                {
                              $(".btn-danger").show();
                }
            }


        });//document
                  function calculateSubtotal(){
                                var total = 0.00;
                              //  debugger;
                                    var tblbody = $("#tblOrderdetails").find("tbody")
                                    tblbody.find('tr').each(function () {
                                                console.log($(this).find("td:eq(2) input[type=number]").val())
                                                var quantity = $(this).find("td:eq(3) input[type=number]").val();
                                                var unitprice = $(this).find("td:eq(4) input[type=number]").val();

                                        var subtotal = (quantity * unitprice)
                                        total = total + subtotal
                                        console.log("quantity" + quantity)
                                        console.log("unitprice" + unitprice)

                                        console.log(total)
                                        console.log(subtotal)
                                                $(this).find("td:eq(5) input[type=number]").val(subtotal);
                                                $("#TotalAmount").val(total);
                                    })
                    }
    </script>

}
